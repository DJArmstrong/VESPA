#!/usr/bin/env python

import os, os.path
import pandas as pd
import argparse

from vespa.kepler import KOI_FPPCalculation
import kplr

from pkg_resources import resource_filename

DATAFOLDER = resource_filename('vespa','data')
WEAKSECFILE = os.path.join(DATAFOLDER, 'weakSecondary_socv9p2vv.csv')
WEAKSECDATA = pd.read_csv(WEAKSECFILE,skiprows=8)
WEAKSECDATA.index = WEAKSECDATA['KOI'].apply(ku.koiname)

parser = argparse.ArgumentParser(description='Generate FP models for a list of KOIs')

parser.add_argument('kois',metavar='KOI',nargs='*',help='a KOI (or list of kois)')
parser.add_argument('-n','--n',type=int,default=2e4)
parser.add_argument('-o','--overwrite',action='store_true')
parser.add_argument('--noJRowefit',action='store_true')

args = parser.parse_args()

client = kplr.API()

for koi in args.kois:
    k = client.koi(ku.koiname(koi,koinum=True))

    fpp = KOI_FPPCalculation(koi, n=args.n, recalc=args.overwrite)
    
    try:
        secthresh = WEAKSECDATA.ix[ku.koiname(koi)]
    except KeyError:
        secthresh = 10*k.koi_depth_err1 * 1e-6
        logging.warning('No weak secondary info for {}. Defaulting to 10x reported depth error = {}'.format(koi, secthresh))

    try:
        r_excl = k.koi_dicco_msky_err * 3
    except:
        r_excl = 4
        logging.warning('No weak secondary info for {}. Defaulting to 10x reported depth error = {}'.format(koi, secthresh))


    fpp.FPPplots()
    fpp.write_results()

koi_dicco_msky_err
